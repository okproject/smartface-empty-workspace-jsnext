{"version":3,"sources":["webpack:///webpack/bootstrap ff6ca7e6b169882f0844","webpack:///./src/app.js"],"names":["console","log"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCAA,SAAQC,GAAR,CAAa,cAAb;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q","file":"scripts/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ff6ca7e6b169882f0844","\nconsole.log( 'Hello World!' );\n\n// // TODO: make this a noop code that just builds.\n\n// // TODO: test https://github.com/facebook/react/blob/master/src/renderers/noop/ReactNoop.js on a separate sandbox project.\n\n// // SmartFace core dependencies:\n// // Temporarily using `__smartface_npm__` as an alias for the smartface npm repository;\n// // this is just for the demonstration.\n// import { application, i18n } from '__smartface_npm__/@smartface/jscore';\n// import { SERVER_ERROR, SIZE_OVERFLOW } from '__smartface-npm__/@smartface/jscore/constants';\n// import { alert } from '__smartface_npm__/@smartface/jscore/globals';\n\n// // Dependencies for the current application:\n// import { page1 } from './pages';\n\n// // Use `i18n.initialize()` factory method to create localizable assets:\n// const lang = i18n.initialize();\n\n// application.on( 'start', ( err, data ) => {\n//     void err;\n\n//     page1.show();\n// } );\n\n// application.on( 'error', ( err ) => { void err; } );\n\n// const isNetworkError = ( err ) => err.type === SERVER_ERROR || err.type === SIZE_OVERFLOW;\n\n// application.on( 'uncaughtException', ( err ) => {\n//     if ( isNetworkError( err ) ) {\n//         alert( lang.networkError );\n\n//         return;\n//     }\n\n//     alert( {\n//         title: lang.applicationError,\n//         message: `\n//             ${err.message}\n//             ${err.sourceURL}\n//             ${err.line}\n//             ${err.stack}\n//         `\n//     } );\n// } );\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js"],"sourceRoot":""}